{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/modules/login-page/login-page.component.html","./src/app/modules/login-page/login-page.component.ts","./src/app/modules/login-page/login-page.module.ts","./src/app/modules/shared/components/breadcrumbs/breadcrumbs.component.html","./src/app/modules/shared/components/breadcrumbs/breadcrumbs.component.ts","./src/app/modules/shared/components/confirmation-delete-modal/confirmation-delete-modal.component.html","./src/app/modules/shared/components/confirmation-delete-modal/confirmation-delete-modal.component.ts","./src/app/modules/shared/components/footer/footer.component.html","./src/app/modules/shared/components/footer/footer.component.ts","./src/app/modules/shared/components/header/header.component.html","./src/app/modules/shared/components/header/header.component.ts","./src/app/modules/shared/components/login/login.component.html","./src/app/modules/shared/components/login/login.component.ts","./src/app/modules/shared/interceptors/auth.interceptor.ts","./src/app/modules/shared/models/user.ts","./src/app/modules/shared/services/authorization.service.ts","./src/app/modules/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<div class=\"content\">\r\n    <div class=\"content__top_block\">\r\n        <div class=\"content__top_block_sticky\">\r\n            <app-header [visibleLoginPage]=\"!isAuthenticated\"\r\n                        (logoutSubmit)=handleLogin()></app-header>\r\n            <div class=\"content__top_block_center\">            \r\n                <app-breadcrumbs *ngIf=\"isAuthenticated\"></app-breadcrumbs>\r\n            </div>\r\n        </div>\r\n        <div class=\"content__top_block_center\">            \r\n            <router-outlet *ngIf=\"isAuthenticated\"></router-outlet>\r\n            <app-login-page *ngIf=\"!isAuthenticated\"\r\n                            (loginPageSubmit)=handleLogin()></app-login-page>\r\n        </div>\r\n    </div>\r\n    <div class=\"content__footer\">\r\n        <app-footer></app-footer>\r\n    </div>   \r\n</div>\r\n\r\n","import {ChangeDetectionStrategy, Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthorizationService } from './modules/shared/services/authorization.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  public isAuthenticated: boolean;\r\n  public modalDialogOpen: boolean;\r\n\r\n  constructor(private translate: TranslateService,\r\n              private authorizationService: AuthorizationService) {\r\n    translate.setDefaultLang('en');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.handleLogin();\r\n  }\r\n\r\n  public handleLogin(): void {\r\n    this.isAuthenticated = this.authorizationService.isAuthenticated();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRouting } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\nimport { SharedModule } from './modules/shared/shared.module';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoginPageModule } from 'src/app/modules/login-page/login-page.module';\r\n\r\n// tslint:disable-next-line:typedef\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRouting,\r\n    SharedModule,\r\n    LoginPageModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\n/* tslint:disable:typedef */\r\n/* tslint:disable:arrow-parens */\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    // component: TodoComponent\r\n    // If your future module not lazy loaded, you should using this way + import your feature module to app module\r\n    loadChildren: () => import('./modules/courses-page/courses-page.module').then(m => m.CoursesPageModule)\r\n    // it's lazy module, all routing in this path will be perform by feature.routing.ts\r\n  }\r\n];\r\n\r\nexport const AppRouting = RouterModule.forRoot(routes);\r\n","<div class=\"login\">\r\n    <div class=\"login__content\">\r\n        <div>\r\n            <p class=\"login__tietle bold\">Nice to see you again!</p>\r\n        </div>\r\n        <input class=\"login__input login__fields\" [(ngModel)]=\"email\" placeholder=\"email\">\r\n        <input  class=\"login__input login__fields\" [(ngModel)]=\"password\" placeholder=\"password\" type=\"password\">\r\n        <button class=\"login__button login__fields link\" (click)=\"login()\">Sign in</button>\r\n        <div class=\"login__text\">\r\n            <div><p><a href=\"#\" class=\"link\">Forgot Password</a></p></div>\r\n            <div><p>Dont't have an account? <span class=\"bold\"><a href=\"#\" class=\"link\">Get started</a></span></p></div>\r\n        </div>\r\n    </div>\r\n</div>","import {Component, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\r\nimport { AuthorizationService } from '../shared/services/authorization.service';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoginPageComponent {\r\n\r\n    constructor(private authorizationService: AuthorizationService) {}\r\n\r\n    public email: string;\r\n    public password: string;\r\n    @Output() loginPageSubmit:  EventEmitter<void> = new EventEmitter();\r\n\r\n    public login(): void {\r\n      this.authorizationService.login(this.email, this.password);\r\n      this.loginPageSubmit.emit();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginPageComponent } from 'src/app/modules/login-page/login-page.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nconst declarations = [\r\n  LoginPageComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ ...declarations ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  exports: [ ...declarations ]\r\n})\r\nexport class LoginPageModule { }\r\n","<div class=\"breadcrumbs\">\r\n    <p>Courses</p>\r\n</div>","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-breadcrumbs',\r\n    templateUrl: './breadcrumbs.component.html',\r\n    styleUrls: ['./breadcrumbs.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n  })\r\n  export class BreadcrumbsComponent {}\r\n","<div class=\"confirmation-delete-modal\">\r\n    <div class=\"confirmation-delete-modal__container\">\r\n        <div class=\"confirmation-delete-modal__content\">\r\n            <div class=\"confirmation-delete-modal__text\"><p>Delete this course?</p></div>\r\n            <div class=\"confirmation-delete-modal__buttons\">\r\n                <div class=\"confirmation-delete-modal__border-button-yes\">\r\n                    <button class=\"confirmation-delete-modal__button-yes button\"\r\n                        (click)=\"onUsesAction(true)\">Yes</button>\r\n                </div>\r\n                <button class=\"confirmation-delete-modal__button-no button\"\r\n                        (click)=\"onUsesAction(false)\">No</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"confirmation-delete-modal__background\"></div>\r\n</div>\r\n    \r\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-confirmation-delete-modal',\r\n    templateUrl: './confirmation-delete-modal.component.html',\r\n    styleUrls: ['./confirmation-delete-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n  })\r\n  export class ConfirmationDeleteModalComponent {\r\n\r\n    @Output() public userAction: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    public onUsesAction(value: boolean): void {\r\n      this.userAction.emit(value);\r\n    }\r\n  }\r\n","<div class=\"footer-wrapper\"></div>","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: './footer.component.html',\r\n    styleUrls: ['./footer.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n  })\r\n  export class FooterComponent {}\r\n","<div class=\"header\">\r\n    <div class=\"header__title\">\r\n        <div class=\"header__image\"></div>\r\n        <div class=\"header__text\">\r\n            <p>angular.commons</p>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"!visibleLoginPage\" class=\"header__login\">\r\n        <app-login (logoutSubmit)=\"logout()\"></app-login>\r\n    </div>\r\n</div>","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n  })\r\n  export class HeaderComponent {\r\n\r\n    @Input() visibleLoginPage: boolean;\r\n    @Output() logoutSubmit:  EventEmitter<void> = new EventEmitter();\r\n\r\n    public logout(): void {\r\n      this.logoutSubmit.emit();\r\n    }\r\n  }\r\n","<div class=\"login\">\r\n    <div class=\"login__text\">\r\n        <p>you're signed in as <span class=\"login__text_dark\">{{name}}</span></p>\r\n    </div>\r\n    <div class=\"login__border-button\">\r\n        <button class=\"login__button\" (click)=\"logout()\">log out</button>\r\n    </div>\r\n    \r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n  })\r\n  export class LoginComponent implements OnInit {\r\n\r\n    public name: string;\r\n    @Output() logoutSubmit:  EventEmitter<void> = new EventEmitter();\r\n\r\n    constructor(public authorizationService: AuthorizationService) {}\r\n\r\n    public ngOnInit(): void {\r\n      this.name = this.authorizationService.getUserInfo().firstName;\r\n    }\r\n\r\n    public logout(): void {\r\n      this.authorizationService.logout();\r\n      this.logoutSubmit.emit();\r\n    }\r\n  }\r\n","// src/app/auth/token.interceptor.ts\nimport { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    constructor() {}\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n        request = request.clone({\n            setHeaders: {\n                Authorization: 'testToken'\n            }\n        });\n\n        return next.handle(request);\n    }\n}\n","import { IUser } from '../interfaces/user';\r\n\r\nexport class User implements IUser {\r\n\r\n    id: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n\r\n    constructor(id: number, firstName: string, lastName: string, email: string, password: string) {\r\n        this.id = id;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.password = password;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from 'src/app/modules/shared/models/user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthorizationService {\r\n/* tslint:disable */\r\n    //1,2,3 are fake user ids\r\n    private users: User[] = [new User(1, 'name1', 'lastName1', 'name1@mail.com', '111'),\r\n                        new User(2, 'name2', 'lastName2', 'name2@mail.com', '222'),\r\n                        new User(3, 'name3', 'lastName3', 'name3@mail.com', '333')];\r\n    private readonly token: string = 'userToken';\r\n    private _isAuthenticated = false;\r\n/* tslint: enable */\r\n\r\n    public isAuthenticated(): boolean {\r\n        this.readUserFromLocalStorage();\r\n        return this._isAuthenticated;\r\n    }\r\n\r\n    public login(email: string, password: string): void {\r\n        const matchedUser = this.users.find( (user: User) => user.email === email && user.password === password);\r\n        if (matchedUser) {\r\n            this._isAuthenticated = true;\r\n            localStorage.setItem(this.token, JSON.stringify(matchedUser));\r\n        }\r\n    }\r\n\r\n    public logout(): void {\r\n        this._isAuthenticated = false;\r\n        localStorage.removeItem(this.token);\r\n    }\r\n\r\n    public getUserInfo(): User {\r\n        const user: User = JSON.parse(localStorage.getItem(this.token));\r\n        return user ? user : null ;\r\n    }\r\n\r\n    private readUserFromLocalStorage(): void {\r\n        if (localStorage.getItem(this.token)) {\r\n            const matchedUser = JSON.parse(localStorage.getItem(this.token));\r\n            if (this.users.find( (user: User) => user.email === matchedUser.email && user.password === matchedUser.password)) {\r\n                this._isAuthenticated = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport { TokenInterceptor } from './interceptors/auth.interceptor';\r\nimport { HeaderComponent } from 'src/app/modules/shared/components/header/header.component';\r\nimport { LoginComponent } from 'src/app/modules/shared/components/login/login.component';\r\nimport { FooterComponent } from 'src/app/modules/shared/components/footer/footer.component';\r\nimport { BreadcrumbsComponent } from 'src/app/modules/shared/components/breadcrumbs/breadcrumbs.component';\r\nimport {\r\n  ConfirmationDeleteModalComponent\r\n} from 'src/app/modules/shared/components/confirmation-delete-modal/confirmation-delete-modal.component';\r\n\r\nconst declarations = [\r\n  HeaderComponent,\r\n  LoginComponent,\r\n  FooterComponent,\r\n  BreadcrumbsComponent,\r\n  ConfirmationDeleteModalComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ ...declarations ],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n  entryComponents: [ ConfirmationDeleteModalComponent ],\r\n  exports: [\r\n    TranslateModule,\r\n    HttpClientModule,\r\n    ...declarations\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}